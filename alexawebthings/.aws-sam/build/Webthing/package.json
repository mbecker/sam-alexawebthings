{
  "name": "sam-alexawebthings-typescript",
  "version": "0.1.0",
  "description": "hello world sample for NodeJS",
  "main": "app.js",
  "repository": "https://github.com/awslabs/aws-sam-cli/tree/develop/samcli/local/init/templates/cookiecutter-aws-sam-hello-nodejs",
  "author": "SAM CLI",
  "license": "MIT",
  "dependencies": {
    "@types/aws-lambda": "^8.10.55",
    "@types/lodash": "^4.14.155",
    "axios": "^0.18.0",
    "js-yaml": "^3.14.0",
    "lodash": "^4.17.15"
  },
  "scripts": {
    "aws:deletestack": "aws cloudformation delete-stack --stack-name sam-alexawebthings",
    "deploy:createyaml": "node ./bin/create-yaml.js",
    "deploy:sam:only": "node ./bin/create-yaml.js && node ./bin/sam-deploy.js",
    "deploy:sam": "npm run build:sam && npm run deploy:sam:only",
    "prebuild": "mkdirp ../dist || true",
    "build:webthing": "npm run build && sam build --template ../template.yaml webthing",
    "build:watch": "npm run prebuild && npm run copy:dependencies && tsc -w --preserveWatchOutput true",
    "build:tsc": "tsc",
    "build": "npm run prebuild && npm run copy:dependencies && npm run copy:package && npm run build:tsc",
    "build:sam": "npm run build && sam build --template ../template.yaml",
    "copy:dependencies": "cpx \"./node_modules/**/*\" ../dist/node_modules",
    "copy:package": "cpx \"./package.json\" ../dist/",
    "test": "mocha --require ts-node/register ./**/*.spec.ts",
    "validate": "sam validate --template ../template.yaml",
    "start:api": "concurrently --kill-others --kill-others-on-fail \"npm run build:watch\" \"sam local start-api --env-vars ../env.json --template ../template.yaml\"",
    "start:invoke:alexa:discovery": "npm run build:tsc && sam local invoke --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.Discovery.Discover.json webthing",
    "start:debug:alexa:discovery": "npm run build:tsc && sam local invoke --debug-port 5858 --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.Discovery.Discover.json webthing",
    "start:invoke:alexa:reportstate:temperatureseonsor:weather": "npm run build:tsc && sam local invoke --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.ReportState.TemperatureSensor.Weather.json webthing",
    "start:debug:alexa:reportstate:temperatureseonsor:weather": "npm run build:tsc && sam local invoke --debug-port 5858 --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.ReportState.TemperatureSensor.Weather.json webthing",
    "start:invoke:alexa:reportstate:temperatureseonsor:philipshuemotion": "npm run build:tsc && sam local invoke --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.ReportState.TemperatureSensor.PhilipsHueMotion.json webthing",
    "start:debug:alexa:reportstate:temperatureseonsor:philipshuemotion": "npm run build:tsc && sam local invoke --debug-port 5858 --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.ReportState.TemperatureSensor.PhilipsHueMotion.json webthing",
    "start:invoke:alexa:reportstate:powercontroller:arbeitszimmer": "npm run build:tsc && sam local invoke --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.ReportState.PowerController.Arbeitszimmer.json webthing",
    "start:debug:alexa:reportstate:powercontroller:arbeitszimmer": "npm run build:tsc && sam local invoke --debug-port 5858 --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.ReportState.PowerController.Arbeitszimmer.json webthing",
    "start:invoke:alexa:powercontroller:turnon:arbeitszimmer": "npm run build:tsc && sam local invoke --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.PowerController.TurnOn.Arbeitszimmer.json webthing",
    "start:debug:alexa:powercontroller:turnon:arbeitszimmer": "npm run build:tsc && sam local invoke --debug-port 5858 --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.PowerController.TurnOn.Arbeitszimmer.json webthing",
    "start:invoke:alexa:powercontroller:turnoff:arbeitszimmer": "npm run build:tsc && sam local invoke --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.PowerController.TurnOff.Arbeitszimmer.json webthing",
    "start:debug:alexa:powercontroller:turnoff:arbeitszimmer": "npm run build:tsc && sam local invoke --debug-port 5858 --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.PowerController.TurnOff.Arbeitszimmer.json webthing",
    "start:invoke:alexa:reportstate:powercontroller:badspiegel": "npm run build:tsc && sam local invoke --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.ReportState.PowerController.BadSpiegel.json webthing",
    "start:debug:alexa:reportstate:powercontroller:badspiegel": "npm run build:tsc && sam local invoke --debug-port 5858 --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.ReportState.PowerController.BadSpiegel.json webthing",
    "start:invoke:alexa:powercontroller:turnon:badspiegel": "npm run build:tsc && sam local invoke --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.PowerController.TurnOn.BadSpiegel.json webthing",
    "start:debug:alexa:powercontroller:turnon:badezimmer": "npm run build:tsc && sam local invoke --debug-port 5858 --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.PowerController.TurnOn.BadSpiegel.json webthing",
    "start:invoke:alexa:powercontroller:turnoff:badspiegel": "npm run build:tsc && sam local invoke --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.PowerController.TurnOff.BadSpiegel.json webthing",
    "start:debug:alexa:powercontroller:turnoff:badezimmer": "npm run build:tsc && sam local invoke --debug-port 5858 --template ../template.yaml --env-vars ../env.json --event ../events/Alexa.PowerController.TurnOff.BadSpiegel.json webthing"
  },
  "devDependencies": {
    "@types/chai": "^4.2.8",
    "@types/mocha": "^5.2.7",
    "@types/node": "^10.17.26",
    "chai": "^4.1.2",
    "concurrently": "^4.1.2",
    "cpx": "^1.5.0",
    "mkdirp": "^0.5.1",
    "mocha": "^5.1.1",
    "shelljs": "^0.8.4",
    "toml": "^3.0.0",
    "ts-node": "^8.6.2",
    "typescript": "^3.7.5"
  }
}
